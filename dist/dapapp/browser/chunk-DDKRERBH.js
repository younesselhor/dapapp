import{c as n,d as b}from"./chunk-P6ZECFOZ.js";import{S as s,X as i}from"./chunk-K7YOXWAC.js";var o=class r{constructor(t){this.http=t}baseUrl="https://be.dabapp.co/api/";filterbaseUrl="/api/motorcycle/brands";uploadImage(t){return this.http.post(this.baseUrl+"upload-image",t)}addPost(t){return this.http.post(this.baseUrl+"listings",t,{headers:{"Content-Type":"application/json"}})}getBrandPartList(){return this.http.get(`${this.baseUrl}bike-part-brands`)}getPartCategoryList(){return this.http.get(`${this.baseUrl}bike-part-categories`)}getPricing(t){return this.http.get(`${this.baseUrl}pricing`,{params:t})}checkPromo(t){return this.http.post(`${this.baseUrl}promo/check`,t)}createMotorcycleListing(t){return this.http.post(`${this.baseUrl}`,t)}createBikePartListing(t){return this.http.post(`${this.baseUrl}/parts`,t)}createLicensePlateListing(t){return this.http.post(`${this.baseUrl}/plates`,t)}getMotorcycleFilters(t){let e=new n;return t&&Object.keys(t).forEach(a=>{t[a]&&(e=e.set(a,t[a]))}),this.http.get(this.baseUrl+this.filterbaseUrl,{params:e})}getMotorcycleBrands(){return this.http.get(this.baseUrl+"motorcycle/brands")}getMotorcycleModels(t){return this.http.get(`${this.baseUrl}motorcycle/models/${t}`)}getMotorcycleYears(t){return this.http.get(`${this.baseUrl}motorcycle/years/${t}`)}getCityList(){return this.http.get(`${this.baseUrl}locations`)}getPlateFormat(t){return this.http.get(`${this.baseUrl}cities/${t}/plate-formats/details`)}getSingleDraft(t){return this.http.get(this.baseUrl+`listings/draft/${t}`)}getCountry(){return this.http.get(`${this.baseUrl}get-country`)}checkPaymentStatus(t){return this.http.get(`${this.baseUrl}payment/status/${t}`)}getWishlist(){return this.http.get(this.baseUrl+"wishlists")}static \u0275fac=function(e){return new(e||r)(i(b))};static \u0275prov=s({token:r,factory:r.\u0275fac,providedIn:"root"})};export{o as a};
